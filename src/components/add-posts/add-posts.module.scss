@import '@styles/settings';

.excerpt {
	$excerpt: &;

	position: relative;
	overflow: hidden;

	&.is-news {
		#{$excerpt}__time {
			display: block;
		}

		#{$excerpt}__image {
			z-index: 0;
			height: 0;

			:global(img) {
				position: absolute;
				top: 0;
				bottom: 0;
				left: 0;
			}
		}

		#{$excerpt}__content {
			padding-top: rem(spacing(2));
			padding-bottom: rem(spacing(2));
			text-align: center;

			@include mq(vars(breakpoint, lrg), max-width) {
				padding-right: rem(vars(layout, gutter));
				padding-left: rem(vars(layout, gutter));
			}

			@include mq(vars(breakpoint, lrg)) {
				padding-right: rem(spacing(2));
				padding-left: rem(spacing(2));
			}

			&-inside {
				width: 100%;

				:global(> *:first-child) {
					margin-top: 0;
					padding-top: 0;
				}
			}
		}

		#{$excerpt}__btn {
			white-space: nowrap;

			@include mq(vars(breakpoint, lrg), max-width) {
				margin-top: rem(spacing(.3));
			}

			@include mq(vars(breakpoint, lrg)) {
				position: absolute;
				bottom: rem(spacing(2));
				left: 50%;
				transform: translateX(-50%);
			}
		}

		&.is-archive {
			@include mq(vars(breakpoint, lrg)) {
				padding-bottom: rem(spacing(4));
			}

			#{$excerpt}__image {
				@include mq(vars(breakpoint, lrg), max-width) {
					padding-bottom: 50%;
				}

				@include mq(vars(breakpoint, sml), max-width) {
					padding-bottom: 80%;
				}

				@include mq(vars(breakpoint, lrg)) {
					padding-bottom: 80%;
				}
			}
		}

		&.is-component {
			#{$excerpt}__image {
				opacity: .8;

				&::before {
					opacity: .8;
				}

				@include mq(vars(breakpoint, lrg), max-width) {
					position: absolute;
					top: 0;
					right: 0;
					bottom: 0;
					left: 0;
					z-index: 0;
					height: auto;
				}

				@include mq(vars(breakpoint, lrg)) {
					padding-bottom: 110%;
				}

				@include mq(vars(breakpoint, xxlrg)) {
					padding-bottom: 80%;
				}
			}

			#{$excerpt}__content {
				display: flex;
				position: relative;
				z-index: 1;
				align-items: center;

				@include mq(vars(breakpoint, lrg)) {
					position: absolute;
					top: 0;
					right: 0;
					bottom: 0;
					left: 0;
				}
			}
		}
	}
}

.pagination {
	width: 100%;

	:global(nav) {
		display: flex;
		flex-wrap: nowrap;
		align-items: center;
		justify-content: center;
	}

	:global(.page-numbers) {
		margin-right: rem(4px);
		margin-left: rem(4px);
		padding: rem(spacing(.3)) rem(spacing(.5));
		line-height: normal;
		text-decoration: none;

		@include type-paragraph;
	}

	:global(.next),
	:global(.prev) {
		padding-right: rem(spacing(.2));
		padding-left: rem(spacing(.2));

		[class*=u-icon-] {
			position: relative;
			top: 2px;
		}
	}

	:global(.dots) {
		margin-right: 0;
		margin-left: 0;
	}

	:global(.current) {
		margin-right: 0;
		margin-left: 0;
		padding-right: rem(spacing(.7));
		padding-left: rem(spacing(.7));
	}

	&:global(.u-link-hover-light .current) {
		color: $light;
	}

	&:global(.u-link-hover-dark .current) {
		color: $dark;
	}

	&:global(.u-link-hover-color-1 .current) {
		color: $color-1;
	}

	&:global(.u-link-hover-color-2 .current) {
		color: $color-2;
	}

	&:global(.u-link-hover-color-3 .current) {
		color: $color-3;
	}

	&:global(.u-link-hover-color-4 .current) {
		color: $color-4;
	}

	&:global(.u-link-background-hover-light .current) {
		background-color: $light;
	}

	&:global(.u-link-background-hover-dark .current) {
		background-color: $dark;
	}

	&:global(.u-link-background-hover-color-1 .current) {
		background-color: $color-1;
	}

	&:global(.u-link-background-hover-color-2 .current) {
		background-color: $color-2;
	}

	&:global(.u-link-background-hover-color-3 .current) {
		background-color: $color-3;
	}

	&:global(.u-link-background-hover-color-4 .current) {
		background-color: $color-4;
	}
}
