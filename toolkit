#!/bin/bash

#COMMANDS
# ./toolkit setup
# ./toolkit composer
# ./toolkit backup
# ./toolkit merge-branch
# ./toolkit git-commit
# ./toolkit uploads-push
# ./toolkit uploads-pull
# ./toolkit db-push
# ./toolkit db-pull
# ./toolkit deploy
# ./toolkit package

ENV=.env
export ENV

if test -f "$ENV"; then
    PRODUCTION_SSH=$(grep TOOLKIT_PRODUCTION_SSH $ENV | cut -d '=' -f2)
    PRODUCTION_DIR=$(grep TOOLKIT_PRODUCTION_DIR $ENV | cut -d '=' -f2)
    PRODUCTION_URL=$(grep TOOLKIT_PRODUCTION_URL $ENV | cut -d '=' -f2)
    STAGING_SSH=$(grep TOOLKIT_STAGING_SSH $ENV | cut -d '=' -f2)
    STAGING_DIR=$(grep TOOLKIT_STAGING_DIR $ENV | cut -d '=' -f2)
    STAGIN_URL=$(grep TOOLKIT_STAGIN_URL $ENV | cut -d '=' -f2)
    LOCAL_DIR=$(grep TOOLKIT_LOCAL_DIR $ENV | cut -d '=' -f2)
    LOCAL_URL=$(grep TOOLKIT_LOCAL_URL $ENV | cut -d '=' -f2)
    UPLOADS_DIR=$(grep TOOLKIT_UPLOADS_DIR $ENV | cut -d '=' -f2)
    BACKUP_DIR=$(grep TOOLKIT_BACKUP_DIR $ENV | cut -d '=' -f2)
    BRANCH=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')
    git config --global core.pager cat

    export PRODUCTION_SSH
    export PRODUCTION_DIR
    export PRODUCTION_URL
    export STAGING_SSH
    export STAGING_DIR
    export STAGIN_URL
    export LOCAL_DIR
    export LOCAL_URL
    export UPLOADS_DIR
    export BACKUP_DIR
    export BRANCH

    clear
    echo "Toolkit Starting..."
    echo "toolkit $1"
else
    eval "sh .scripts/generate-env"
fi

# ./toolkit setup
if [ "$1" = "setup" ]; then
    eval "sh .scripts/$1"

# ./toolkit git-commit
elif [ "$1" = "git-commit" ]; then
    eval "sh .scripts/$1"

# ./toolkit deploy
elif [ "$1" = "deploy" ]; then
    eval "sh .scripts/$1"

# ./toolkit backup
elif [ "$1" = "backup" ]; then
    eval "sh .scripts/$1"

# ./toolkit uploads-push
elif [ "$1" = "uploads-push" ]; then
    eval "sh .scripts/$1"

# ./toolkit uploads-pull
elif [ "$1" = "uploads-pull" ]; then
    eval "sh .scripts/$1"

# ./toolkit db-push
elif [ "$1" = "db-push" ]; then
    eval "sh .scripts/$1"

# ./toolkit db-pull
elif [ "$1" = "db-pull" ]; then
    eval "sh .scripts/$1"

# ./toolkit db-pull
elif [ "$1" = "package" ]; then
    eval "sh .scripts/$1"

else
    echo "Toolkit Stopping";
fi
